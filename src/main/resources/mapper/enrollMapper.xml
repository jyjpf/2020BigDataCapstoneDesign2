<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dictation.mapper.EnrollDAO">

	<select id="getEnroll" parameterType="EnrollVO" resultType="Map">

		select
			lecture_no,
			user_id,
			approval_dt,
			approval_cd,
			pass_course_no as level,
			study_time
		from
			enroll
		where 1=1
			and lecture_no = #{lecture_no}
			and user_id = #{user_id}

	</select>

	<select id="getStudentList" parameterType="Map" resultType="Map">

		select
			fn_cmmn(e.approval_cd) as approval_cd,
			u.user_id,
			u.kor_nm,
			fn_cmmn(u.gender_cd) as gender_cd,
			u.birth_dt,
			u.grade,
			u.ban,
		    u.bunho,
			u.cel_phone_no
		from
			enroll e join users u
	  	on
			e.user_id = u.user_id
		where 1=1
			and lecture_no = #{lecture_no}

	</select>

	<select id="getEnrollList" parameterType="Map" resultType="EnrollVO">

		select
			lecture_no,
			user_id,
			fn_cmmn(approval_cd) as approval_cd,
		    update_id,
		    update_date
		from
			enroll
		where 1=1
		  and user_id = #{user_id}

	</select>


	<insert id="insert" parameterType="EnrollVO">

		insert into enroll(
			lecture_no,
			user_id,
			approval_dt,
			approval_cd,
		    pass_course_no,
		    study_time,
			input_id,
			input_date,
			update_id,
			update_date
		) values (
			${lecture_no},
			#{user_id},
			(
				select
					case lecture_type_cd
						when '005001' then now()
						else null
					end
				from lecture
				where lecture_no = ${lecture_no}
			),
			(
			    select
			    	case lecture_type_cd
						when '005001' then '004001'
						when '005002' then '004003'
						else '004003'
			    	end
			    from lecture
			    where lecture_no = ${lecture_no}
			),
		    0,
			0,
			#{user_id},
			now(),
			#{user_id},
			now()
		)

	</insert>

	<update id="updateStudent" parameterType="EnrollVO">

		update
		    enroll
		set
			<if test="pass_course_no != null">pass_course_no = #{pass_course_no},</if>
			<if test="study_time != null">study_time = #{study_time},</if>
			update_id = #{update_id},
			update_date = now()
		where 1=1
			and user_id = #{user_id}
			and lecture_no = #{lecture_no}

	</update>

	<update id="updateTeacher" parameterType="EnrollVO">

		update
			enroll
		set
			<if test="pass_course_no != null">pass_course_no = #{pass_course_no},</if>
			<if test="study_time != null">study_time = #{study_time},</if>
			<if test="approval_cd != null">
				approval_cd = #{approval_cd},
				approval_dt = now(),
		    </if>
			update_id = #{update_id},
			update_date = now()
		where 1=1
			and user_id = #{user_id}
			and lecture_no = #{lecture_no}

	</update>

	<delete id="delete" parameterType="Map">

		delete from
			enroll
		where 1=1
		  and user_id = #{user_id}
		  and lecture_no = #{lecture_no}

	</delete>

</mapper>